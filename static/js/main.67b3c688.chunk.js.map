{"version":3,"sources":["components/CreateTask.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["CreateTask","props","handleInput","e","setState","target","name","value","addTolist","data","state","title","list","description","dueDate","Date","toDateString","key","completed","shortid","generate","updateDescription","text","map","item","updateTitle","deleteItem","filteredList","filter","isCompleted","ind","updatedList","index","today","month","getMonth","date","getDate","year","getFullYear","className","type","placeholder","this","onChange","htmlFor","cols","rows","onClick","class","style","parse","border","width","textDecoration","display","Component","Footer","App","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67b3c688.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\nexport class CreateTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      title: \"\",\r\n      description: \"\",\r\n      dueDate: \"\",\r\n      completed: false,\r\n      key: shortid.generate(),\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  addTolist = (data) => {\r\n    if (this.state.title !== \"\") {\r\n      this.setState({\r\n        list: [\r\n          {\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            dueDate: new Date(this.state.dueDate).toDateString(),\r\n            key: this.state.key,\r\n            completed: this.state.completed,\r\n          },\r\n          ...this.state.list,\r\n        ],\r\n        title: \"\",\r\n        description: \"\",\r\n        dueDate: \"\",\r\n        key: shortid.generate(),\r\n        completed: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  updateDescription = (text, key) => {\r\n    const list = this.state.list;\r\n    list.map((item) => {\r\n      if (item.key === key) {\r\n        item.description = text;\r\n      }\r\n    });\r\n    this.setState({\r\n      list: list,\r\n    });\r\n  };\r\n  updateTitle = (text, key) => {\r\n    const list = this.state.list;\r\n    list.map((item) => {\r\n      if (item.key === key) {\r\n        item.title = text;\r\n      }\r\n    });\r\n    this.setState({\r\n      list: list,\r\n    });\r\n  };\r\n\r\n  deleteItem = (key) => {\r\n    const filteredList = this.state.list.filter((item) => item.key !== key);\r\n    this.setState({\r\n      list: filteredList,\r\n    });\r\n  };\r\n  isCompleted = (ind) => {\r\n    const updatedList = this.state.list.map((item, index) => {\r\n      if (index === ind) {\r\n        return { ...item, completed: !item.completed };\r\n      }\r\n      return item;\r\n    });\r\n    this.setState({\r\n      list: updatedList,\r\n    });\r\n  };\r\n\r\n  //   STATE AND METHODS ARE DEFINED ABOVE\r\n  render() {\r\n    var today = new Date();\r\n    var month = today.getMonth();\r\n    var date = today.getDate();\r\n    var year = today.getFullYear();\r\n    today = new Date(`${year}-${month + 1}-${date}`).toDateString();\r\n\r\n    return (\r\n      <div className=\"container \">\r\n        <div className=\"task-input\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            className=\" mx-3 my-1 p-1 row\"\r\n            placeholder=\"Title..\"\r\n            value={this.state.title}\r\n            onChange={(e) => this.handleInput(e)}\r\n          />\r\n          <label htmlFor=\"deu date\" className=\"duedate\">\r\n            Set deadline for the task:\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"dueDate\"\r\n            className=\"p-1 mx-3 my-1 col-8 col-md-2 row\"\r\n            value={this.state.dueDate}\r\n            onChange={(e) => this.handleInput(e)}\r\n          />\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"20\"\r\n            rows=\"3\"\r\n            className=\"text-area mx-3 my-1 \"\r\n            placeholder=\"Enter Description\"\r\n            value={this.state.description}\r\n            onChange={(e) => this.handleInput(e)}\r\n          ></textarea>\r\n          <button\r\n            className=\"button btn-danger m-3 w-25 row\"\r\n            onClick={() => {\r\n              this.addTolist();\r\n            }}\r\n          >\r\n            Add task\r\n          </button>\r\n        </div>\r\n        <br />\r\n        <hr className=\"w-90 dark\" />\r\n        {/* // INPUT SECTION ENDS HERE AND LIST ITEMS START */}\r\n        <div className=\"list container-fluid row g-3 m-auto justify-content-center\">\r\n          {this.state.list.map((item, ind) => (\r\n            <div\r\n              key={item.key}\r\n              class=\"card g-5 mx-2 mb-5\"\r\n              style={\r\n                Date.parse(item.dueDate) < Date.parse(today)\r\n                  ? { border: \"5px solid yellow\", width: \"18rem\" }\r\n                  : { width: \"18rem\" }\r\n              }\r\n            >\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title bolder\">\r\n                  <input\r\n                    style={\r\n                      item.completed\r\n                        ? { textDecoration: \"line-through blue\" }\r\n                        : { textDecoration: \"underLine\" }\r\n                    }\r\n                    type=\"text\"\r\n                    className=\"outline-hidden\"\r\n                    value={item.title}\r\n                    onChange={(e) =>\r\n                      this.updateTitle(e.target.value, item.key)\r\n                    }\r\n                  />\r\n\r\n                  <span>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      onClick={() => this.isCompleted(ind)}\r\n                    />\r\n                  </span>\r\n                </h5>\r\n                {/* <h6 class=\"card-subtitle mb-2 text-muted\">Description</h6> */}\r\n                <p class=\"card-text\">\r\n                  <textarea\r\n                    rows=\"2\"\r\n                    placeholder=\"Add Task Description..\"\r\n                    className=\"outline-hidden\"\r\n                    type=\"text\"\r\n                    value={item.description}\r\n                    onChange={(e) => {\r\n                      this.updateDescription(e.target.value, item.key);\r\n                    }}\r\n                  />\r\n                </p>\r\n                <p>\r\n                  Due: {item.dueDate === 'Invalid Date' ? 'Give date' : item.dueDate}\r\n                  <span>\r\n                    <button\r\n                      className=\"del-btn\"\r\n                      onClick={() => this.deleteItem(item.key)}\r\n                    >\r\n                      Delete\r\n                      </button>\r\n                  </span>\r\n                  <p style={Date.parse(item.dueDate) < Date.parse(today) ? { display: 'block' } : { display: 'none' }}>Due Date passed</p>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTask;\r\n","import React, { Component } from 'react'\r\n\r\nexport class Footer extends Component {\r\n    render() {\r\n        const year = new Date().getFullYear()\r\n        return (\r\n            <div>\r\n                <footer className=\"footer container-fluid \">\r\n                    <h6>TodoList &#169; {year} </h6>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react'\nimport './App.css'\nimport CreateTask from './components/CreateTask'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Footer from './components/Footer';\n\n\n\nexport class App extends Component {\n\n\n    render() {\n        return (\n            <div>\n                <header className=\"header\">\n                   <h1 className=\"container\" >- Todo List - <span><h3>In React</h3></span> </h1> \n                </header>\n                <CreateTask/>\n                <Footer/>\n            </div>\n        )\n    }\n}\nconsole.log(Date().month)\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}